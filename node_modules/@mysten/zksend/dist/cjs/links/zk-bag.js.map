{
  "version": 3,
  "sources": ["../../../src/links/zk-bag.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { Argument, Transaction, TransactionObjectArgument } from '@mysten/sui/transactions';\n\nexport interface ZkBagContractOptions {\n\tpackageId: string;\n\tbagStoreId: string;\n\tbagStoreTableId: string;\n}\n\nexport const MAINNET_CONTRACT_IDS: ZkBagContractOptions = {\n\tpackageId: '0x5bb7d0bb3240011336ca9015f553b2646302a4f05f821160344e9ec5a988f740',\n\tbagStoreId: '0x65b215a3f2a951c94313a89c43f0adbd2fd9ea78a0badf81e27d1c9868a8b6fe',\n\tbagStoreTableId: '0x616db54ca564660cd58e36a4548be68b289371ef2611485c62c374a60960084e',\n};\n\nexport class ZkBag<IDs> {\n\t#package: string;\n\t#module = 'zk_bag' as const;\n\tids: IDs;\n\n\tconstructor(packageAddress: string, ids: IDs) {\n\t\tthis.#package = packageAddress;\n\t\tthis.ids = ids;\n\t}\n\n\tnew(\n\t\ttx: Transaction,\n\t\t{\n\t\t\targuments: [store, receiver],\n\t\t}: {\n\t\t\targuments: [store: TransactionObjectArgument | string, receiver: Argument | string];\n\t\t},\n\t) {\n\t\ttx.moveCall({\n\t\t\ttarget: `${this.#package}::${this.#module}::new`,\n\t\t\targuments: [\n\t\t\t\ttx.object(store),\n\t\t\t\ttypeof receiver === 'string' ? tx.pure.address(receiver) : receiver,\n\t\t\t],\n\t\t});\n\t}\n\n\tadd(\n\t\ttx: Transaction,\n\t\t{\n\t\t\targuments: [store, receiver, item],\n\t\t\ttypeArguments,\n\t\t}: {\n\t\t\targuments: [\n\t\t\t\tstore: TransactionObjectArgument | string,\n\t\t\t\treceiver: Argument | string,\n\t\t\t\titem: TransactionObjectArgument | string,\n\t\t\t];\n\t\t\ttypeArguments: [string];\n\t\t},\n\t): Extract<Argument, { $kind: 'Result' }> {\n\t\treturn tx.moveCall({\n\t\t\ttarget: `${this.#package}::${this.#module}::add`,\n\t\t\targuments: [\n\t\t\t\ttx.object(store),\n\t\t\t\ttypeof receiver === 'string' ? tx.pure.address(receiver) : receiver,\n\t\t\t\ttx.object(item),\n\t\t\t],\n\t\t\ttypeArguments: typeArguments,\n\t\t});\n\t}\n\n\tinit_claim(\n\t\ttx: Transaction,\n\t\t{\n\t\t\targuments: [store],\n\t\t}: {\n\t\t\targuments: [store: TransactionObjectArgument | string];\n\t\t},\n\t) {\n\t\tconst [bag, claimProof] = tx.moveCall({\n\t\t\ttarget: `${this.#package}::${this.#module}::init_claim`,\n\t\t\targuments: [tx.object(store)],\n\t\t});\n\n\t\treturn [bag, claimProof] as const;\n\t}\n\n\treclaim(\n\t\ttx: Transaction,\n\t\t{\n\t\t\targuments: [store, receiver],\n\t\t}: {\n\t\t\targuments: [store: TransactionObjectArgument | string, receiver: Argument | string];\n\t\t},\n\t) {\n\t\tconst [bag, claimProof] = tx.moveCall({\n\t\t\ttarget: `${this.#package}::${this.#module}::reclaim`,\n\t\t\targuments: [\n\t\t\t\ttx.object(store),\n\t\t\t\ttypeof receiver === 'string' ? tx.pure.address(receiver) : receiver,\n\t\t\t],\n\t\t});\n\n\t\treturn [bag, claimProof] as const;\n\t}\n\n\tclaim(\n\t\ttx: Transaction,\n\t\t{\n\t\t\targuments: [bag, claim, id],\n\t\t\ttypeArguments,\n\t\t}: {\n\t\t\targuments: [\n\t\t\t\tbag: TransactionObjectArgument | string,\n\t\t\t\tclaim: Extract<Argument, { $kind: 'NestedResult' }>,\n\t\t\t\tid: TransactionObjectArgument | string,\n\t\t\t];\n\t\t\ttypeArguments: [string];\n\t\t},\n\t): Extract<Argument, { $kind: 'Result' }> {\n\t\treturn tx.moveCall({\n\t\t\ttarget: `${this.#package}::${this.#module}::claim`,\n\t\t\targuments: [tx.object(bag), tx.object(claim), typeof id === 'string' ? tx.object(id) : id],\n\t\t\ttypeArguments,\n\t\t});\n\t}\n\n\tfinalize(\n\t\ttx: Transaction,\n\t\t{\n\t\t\targuments: [bag, claim],\n\t\t}: {\n\t\t\targuments: [\n\t\t\t\tbag: TransactionObjectArgument | string,\n\t\t\t\tclaim: Extract<Argument, { $kind: 'NestedResult' }>,\n\t\t\t];\n\t\t},\n\t) {\n\t\ttx.moveCall({\n\t\t\ttarget: `${this.#package}::${this.#module}::finalize`,\n\t\t\targuments: [tx.object(bag), tx.object(claim)],\n\t\t});\n\t}\n\n\tupdate_receiver(\n\t\ttx: Transaction,\n\t\t{\n\t\t\targuments: [bag, from, to],\n\t\t}: {\n\t\t\targuments: [\n\t\t\t\tbag: TransactionObjectArgument | string,\n\t\t\t\tfrom: Argument | string,\n\t\t\t\tto: Argument | string,\n\t\t\t];\n\t\t},\n\t) {\n\t\ttx.moveCall({\n\t\t\ttarget: `${this.#package}::${this.#module}::update_receiver`,\n\t\t\targuments: [\n\t\t\t\ttx.object(bag),\n\t\t\t\ttypeof from === 'string' ? tx.pure.address(from) : from,\n\t\t\t\ttypeof to === 'string' ? tx.pure.address(to) : to,\n\t\t\t],\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
